
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  calorieGoal   CalorieGoal?  
  waterGoal     WaterGoal?
  breakfast     Breakfast[]
  lunch         Lunch[]
  dinner        Dinner[]
  snacks        Snacks[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

//Model for calorie goal 
model CalorieGoal {
  id         String    @id @default(cuid())
  userEmail  String    @unique @default("")
  user       User      @relation(fields: [userEmail], references: [email])
  Calorie    Int       
  createdAt  DateTime  @default(now())
}

//Model for water goal
model WaterGoal{
  id         String    @id @default(cuid())
  userEmail  String    @unique @default("")
  user       User      @relation(fields: [userEmail], references: [email])
  water      Int       
  createdAt  DateTime  @default(now())
}

//Model to add breakfast 
model Breakfast{
  id            String    @id @default(cuid())
  userEmail     String    
  user          User      @relation(fields: [userEmail], references: [email])
  FoodItems     String
  CalorieIntake Int
  createdAt     DateTime  @default(now())
}

//Model to add Lunch
model Lunch{
  id            String    @id @default(cuid())
  userEmail     String    
  user          User      @relation(fields: [userEmail], references: [email])
  FoodItems     String
  CalorieIntake Int
  createdAt     DateTime  @default(now())
}

//Model to add Dinner
model Dinner{
  id            String    @id @default(cuid())
  userEmail     String    
  user          User      @relation(fields: [userEmail], references: [email])
  FoodItems     String
  CalorieIntake Int
  createdAt     DateTime  @default(now())
}

//Model to add Snacks
model Snacks{
  id            String    @id @default(cuid())
  userEmail     String    
  user          User      @relation(fields: [userEmail], references: [email])
  FoodItems     String
  CalorieIntake Int
  createdAt     DateTime  @default(now())
}